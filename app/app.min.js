!function(){"use strict";function e(e,t){function r(e){return e.cacheAll()}function n(e){return e.getSharedCalendars()}function a(e){return e.getSharedLabels()}function o(e){return e.getUser()}function s(e){return e.getUsers()}function c(e){return e.isAuthenticated()}function l(e){return e.isAdmin()}e.state("root",{url:"",templateUrl:"index.html","abstract":!0,resolve:{cache:["cacheService",r],user:["headerService",o],sharedCalendars:["calendarUserService",n],sharedLabels:["labelUserService",a]},views:{header:{templateUrl:"pages/layout/header/header.html",controller:"HeaderController",controllerAs:"hc"},sidebar:{templateUrl:"pages/layout/sidebar/sidebar.html",controller:"SidebarController",controllerAs:"sc"}}}).state("login",{url:"/login",parent:"root",views:{"content@":{templateUrl:"pages/login/login.html",controller:"LoginController",controllerAs:"vm"}}}).state("logout",{url:"/logout",parent:"root",views:{"content@":{controller:"LogoutController",controllerAs:"vm"}}}).state("register",{url:"/register",parent:"root",views:{"content@":{templateUrl:"pages/register/register.html",controller:"RegisterController",controllerAs:"vm"}}}).state("admin",{url:"/admin",parent:"root",views:{"content@":{templateUrl:"pages/admin/admin.html",controller:"AdminController",controllerAs:"vm",resolve:{isAuthenticated:["accessService",c],isAdmin:["accessService",l],users:["userService",s]}}}}).state("dashboard",{url:"/dashboard",parent:"root",views:{"content@":{templateUrl:"pages/dashboard/dashboard.html",resolve:{isAuthenticated:["accessService",c]}}}}).state("labels",{url:"/labels",parent:"root"}).state("labels.label",{url:"/:labelId",views:{"content@":{templateUrl:"pages/tasks/label.html",controller:"LabelPageController",controllerAs:"vm",resolve:{isAuthenticated:["accessService",c]}}}}).state("inbox",{url:"/inbox",parent:"root",views:{"content@":{templateUrl:"pages/tasks/inbox.html",resolve:{isAuthenticated:["accessService",c]}}}}).state("today",{url:"/today",parent:"root",views:{"content@":{templateUrl:"pages/tasks/today.html",resolve:{isAuthenticated:["accessService",c]}}}}).state("week",{url:"/week",parent:"root",views:{"content@":{templateUrl:"pages/tasks/week.html",resolve:{isAuthenticated:["accessService",c]}}}}).state("calendar",{url:"/calendar",parent:"root",views:{"content@":{templateUrl:"pages/calendar/calendar.html",resolve:{isAuthenticated:["accessService",c]}}}}),t.otherwise("/dashboard")}angular.module("app",["ui.router","ui.bootstrap","angularMoment"]).config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e){e.init()}angular.module("app").run(e),e.$inject=["appService"]}(),function(){"use strict";function e(e,t,r){function n(){e.$on("$stateChangeError",a)}function a(e,n,a,o,s,c){c===r.UNAUTHORIZED?(e.preventDefault(),t.go("login")):"admin"===n.name&&c===r.FORBIDDEN}return{init:n}}angular.module("app").factory("appService",e),e.$inject=["$rootScope","$state","statusService"]}(),function(){"use strict";function e(){return function(e,t){if(!t)return e;for(var r=[],n=0;n<e.length;n++)(e[n].label_id===t||e[n].calendar_id===t)&&r.push(e[n]);return r}}angular.module("app").filter("inGroups",e),e.$inject=[]}(),function(){"use strict";function e(e){return function(t,r){for(var n=[],a=0;a<t.length;a++){var o=r.isSame(e(t[a].dt_start),"day");o||(o=r.isSame(e(t[a].dt_end),"day")),o&&n.push(t[a])}return n}}angular.module("app").filter("sameDayAs",e),e.$inject=["moment"]}(),function(){"use strict";function e(e){return function(t,r){if(!r)return t;for(var n=[],a=0;a<t.length;a++){(!t[a].due||t[a].due&&e(t[a].due).isBefore(e().add(r,"days")))&&n.push(t[a])}return n}}angular.module("app").filter("withinDays",e),e.$inject=["moment"]}(),function(){"use strict";function e(e,t){function r(){n(),a(),o(),s()}function n(){b.calendar=new t("calendar"),b.calendar.getByUser().then(function(e){b.calendars=l(e),h()})}function a(){b.event=new t("event"),b.event.getByUser().then(function(e){b.events=l(e),v()})}function o(){b.label=new t("label"),b.label.getByUser().then(function(e){b.labels=l(e),g()})}function s(){b.task=new t("task"),b.task.getByUser().then(function(e){b.tasks=l(e),m()})}function c(){b.calendars=[],b.events=[],b.labels=[],b.tasks=[],h(),v(),g(),m()}function l(e){var t=e.data;return t.success?t.data:t.title}function u(){return{calendars:i(),events:d(),labels:f(),tasks:p()}}function i(){return b.calendars}function d(){return b.events}function f(){return b.labels}function p(){return b.tasks}function h(){e.$broadcast("updateCalendars")}function v(){e.$broadcast("updateEvents")}function g(){e.$broadcast("updateLabels")}function m(){e.$broadcast("updateTasks")}var b=this;return b.calendars=[],b.events=[],b.labels=[],b.tasks=[],{cacheAll:r,cacheCalendars:n,cacheEvents:a,cacheLabels:o,cacheTasks:s,clearCache:c,getAll:u,getCalendars:i,getEvents:d,getLabels:f,getTasks:p}}angular.module("app").service("cacheService",e),e.$inject=["$rootScope","crudService"]}(),function(){"use strict";function e(e,t){function r(e){switch(this.type=e,this.base="api/",e){case"event":case"calendar":this.base+="activity/calendar/";break;case"label":case"task":this.base+="activity/task/";break;case"labelUser":case"calendarUser":this.base+="collab/";break;default:this.base+=e+"/"}this.base+=e+"Manager.php"}function n(t){return e.get(this.base,{params:{id:t}}).then(i)["catch"](d)}function a(){return e.get(this.base,{params:{byUser:!0}}).then(i)["catch"](d)}function o(t,r){return e.get(this.base,{params:{where:t,bindings:JSON.stringify(r)}}).then(i)["catch"](d)}function s(t){return t=this.removeUnecessaryKeys(t),e.post(this.base,t).then(i)["catch"](d)}function c(t,r){return r=this.removeUnecessaryKeys(r),e.put(this.base,r,{params:{id:t}}).then(i)["catch"](d)}function l(t){return e["delete"](this.base,{params:{id:t}}).then(i)["catch"](d)}function u(t){return e["delete"](this.base+"?usewhere=true&where="+escape(t)).then(i)["catch"](d)}function i(e){return e}function d(e){return t.error(e),{success:"false",title:"Error when querying server.",message:e}}function f(e){for(var t=["id","person_id",this.type+"_id","activity_info_id","parent_name"],r=0;r<t.length;r++)delete e[t[r]];return e}var p=r;return p.prototype={get:n,getByUser:a,getWhere:o,create:s,update:c,remove:l,removeWhere:u,removeUnecessaryKeys:f},p}angular.module("app").factory("crudService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(e,t){function r(t){return e.get(s.base+t).then(a)["catch"](o)}function n(t,r){return e.post(s.base+t,r).then(a)["catch"](o)}function a(e){return e}function o(e){return t.error(e),{success:"false",title:"Error when accessing variable.",message:e}}var s=this;return s.base="api/session/sessionVarManager.php?var=",{getVar:r,setVar:n}}angular.module("app").factory("sessionService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(){function e(e,t,r,n){t[0].focus()}return{restrict:"A",link:e}}angular.module("app").directive("spAutoFocus",e)}(),function(){"use strict";function e(){function e(e,t,r,n){function a(){c()}function o(t){return t===e.otherModel.$viewValue}function s(e,t){n.$validate()}var c=e.$watch("otherModel",s);n.$validators.spCompareTo=o,t.on("$destroy",a)}return{require:"ngModel",scope:{otherModel:"=spCompareTo"},link:e}}angular.module("app").directive("spCompareTo",e)}(),function(){"use strict";function e(e){function t(){e.logout()}t()}angular.module("app").controller("LogoutController",e),e.$inject=["logoutService"]}(),function(){"use strict";function e(e,t,r,n,a){function o(){function o(t){a.clearCache(),e.$broadcast("updateUser"),r.go("login")}function s(e){n.error(e)}return t.post("api/user/logoutManager.php").then(o)["catch"](s)}return{logout:o}}angular.module("app").factory("logoutService",e),e.$inject=["$rootScope","$http","$state","$log","cacheService"]}(),function(){"use strict";function e(e){function t(t){t.hasOwnProperty("dt_start")?(t.all_day=parseInt(t.all_day),t.dt_start=a(e(t.dt_start)),t.dt_end=a(e(t.dt_end))):(t.hasOwnProperty("due")&&t.due&&(t.due=a(e(t.due))),t.hasOwnProperty("reminder")&&t.reminder&&(t.reminder=a(e(t.reminder))))}function r(t){var r=n();return t.hasOwnProperty("dt_start")?(t.dt_start=o(e(t.dt_start,r)),t.dt_end=o(e(t.dt_end,r))):(t.hasOwnProperty("due")&&t.due&&(t.due=o(e(t.due,r))),t.hasOwnProperty("reminder")&&t.reminder&&(t.reminder=o(e(t.reminder,r)))),t}function n(){return"hh:mm a MM-DD-YYYY"}function a(e){return e.format(n())}function o(e){return e.format("YYYY-MM-DD HH:mm:ss")}return{formatForDisplay:t,formatForStorage:r,getDisplayFormat:n,toDisplayFormat:a,toStorageFormat:o}}angular.module("app").factory("formatService",e),e.$inject=["moment"]}(),function(){"use strict";function e(e,t,r,n){function a(){e.dismiss("cancel")}function o(){e.close()}function s(t){e.close(t)}function c(t){e.dismiss(t)}function l(e){n.toggleAllDay(e)}var u=this;u.groups=t,u.item=r,u.cancel=a,u.close=o,u.confirm=s,u.remove=c,u.toggleAllDay=l}angular.module("app").controller("ModalController",e),e.$inject=["$uibModalInstance","groups","item","eventModalService"]}(),function(){"use strict";function e(e,t,r){function n(e,t){return r.uploadFile(e).then(function(e){return e})}var a=this;a.uploadFile=n}angular.module("app").controller("UploadController",e),e.$inject=["$scope","$http","uploadService"]}(),function(){"use strict";function e(e){function t(t,r,n){function a(e){t.$apply(function(){var e=r[0].files[0];e.size<=o?t.uc.uploadFile(e).then(function(e){t.spFileChange=e}):alert("File must be less than "+o/1024/1024+"MB.")})}var o=2097152;e(n.spFileChange);r[0].addEventListener("change",a,!1)}return{restrict:"A",controller:"UploadController",controllerAs:"uc",link:t,scope:{spFileChange:"="}}}angular.module("app").directive("spFileChange",e),e.$inject=["$parse"]}(),function(){"use strict";function e(e,t){function r(r){var n=new FormData;return n.append("file",r),e.post("api/upload/uploadManager.php",n,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){return e.data.success?e.data.data:(t.error(e.title),"")})["catch"](function(e){t.error(e)})}return{uploadFile:r}}angular.module("app").factory("uploadService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(e,t,r,n){function a(){}function o(e){n.openUserModal(e).then(function(e){e&&(s.users=e)})}var s=this;s.isAdmin=e,s.users=t,s.showUserModal=o,a()}angular.module("app").controller("AdminController",e),e.$inject=["isAdmin","users","userService","userModalService"]}(),function(){"use strict";function e(e){function t(){r.loading=!0,e.login(r.user).then(function(e){r.loading=!1,r.error=e})}var r=this;r.loading=!1,r.error="",r.login=t}angular.module("app").controller("LoginController",e),e.$inject=["loginService"]}(),function(){"use strict";function e(e,t,r,n,a){function o(o){function s(t){return t.data.success===!1?t.data.title:(a.cacheAll(),e.$broadcast("updateUser"),void r.go("dashboard"))}function c(e){return n.error(e),"Something went wrong. Please try again."}return o.name=o.name.toLowerCase().trim(),t.post("api/user/loginManager.php",o).then(s)["catch"](c)}return{login:o}}angular.module("app").factory("loginService",e),e.$inject=["$rootScope","$http","$state","$log","cacheService"]}(),function(){"use strict";function e(e){function t(){r.loading=!0,e.register(r.user).then(function(e){r.loading=!1,r.error=e})}var r=this;r.error="",r.loading=!1,r.register=t}angular.module("app").controller("RegisterController",e),e.$inject=["registerService"]}(),function(){"use strict";function e(e,t,r){function n(r){function n(r){return"false"===r.success?(t.error(r.title),r.title):void e.url("/login")}return r.name=r.name.toLowerCase().trim(),a.crud.create(r).then(n)}var a=this;return a.crud=new r("user"),{register:n}}angular.module("app").factory("registerService",e),e.$inject=["$location","$log","crudService"]}(),function(){"use strict";function e(e){this.labelId=e.labelId}angular.module("app").controller("LabelPageController",e),e.$inject=["$stateParams"]}(),function(){"use strict";function e(e,t,r){function n(){function e(e){return e.data.success!==!1?o.resolve(r.OK):o.reject(r.UNAUTHORIZED),o.promise}return t.getVar("name").then(e)}function a(){function e(e){var t=e.data;return t.success===!1||"0"===t.data?o.reject(r.FORBIDDEN):o.resolve(r.OK),o.promise}return t.getVar("admin").then(e)}var o=e.defer();return{isAuthenticated:n,isAdmin:a}}angular.module("app").factory("accessService",e),e.$inject=["$q","sessionService","statusService"]}(),function(){"use strict";function e(){return{OK:200,UNAUTHORIZED:401,FORBIDDEN:403}}angular.module("app").service("statusService",e)}(),function(){"use strict";function e(e,t,r,n){function a(){i(),d(),e.$on("updateCalendars",i),e.$on("updateEvents",d),f.today=t.getToday(),f.selectedDay=f.today,f.month=t.getMonth(f.today)}function o(e,r){f.selectedDay=t.dayClicked(e,r,f.selectedDay,f.calendars)}function s(e){return t.isSameDay(e,f.selectedDay)}function c(e,r){t.showEventModal(e,r,f.calendars)}function l(){f.month=t.lastMonth(f.month)}function u(){f.month=t.nextMonth(f.month)}function i(){f.calendars=r.getCalendars()}function d(){f.events=n.getEvents()}var f=this;f.events=[],f.calendar=[],f.today=null,f.selectedDay=null,f.month=null,f.dayClicked=o,f.isSameDayAsSelected=s,f.showEventModal=c,f.lastMonth=l,f.nextMonth=u,a()}angular.module("app").controller("EventsController",e),e.$inject=["$rootScope","calendarWidgetService","calendarService","eventsService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/activities/events/events.html",controller:"EventsController",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("spEvents",e)}(),function(){"use strict";function e(e,t){function r(e){return l.event.create(e).then(c)}function n(e){return e.event_id?s(e.event_id,e):r(e)}function a(e){return l.event.remove(e).then(c)}function o(){return t.getEvents()}function s(e,t){return l.event.update(e,t).then(c)}function c(e){var r=e.data;return r.success?(t.cacheEvents(),r.data):r.title}var l=this;return l.event=new e("event"),{createEvent:r,createOrUpdateEvent:n,deleteEvent:a,getEvents:o,updateEvent:s}}angular.module("app").factory("eventsService",e),e.$inject=["crudService","cacheService"]}(),function(){"use strict";function e(e){function t(){r.item.recurrence&&e.openRecurrenceModal(r.item)}var r=this;r.showRecurrenceModal=t}angular.module("app").controller("RecurrenceController",e),e.$inject=["recurrenceModalService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/activities/recurrence/recurrence.html",controller:"RecurrenceController",controllerAs:"rc",bindToController:!0,scope:{item:"="}}}angular.module("app").directive("spRepeat",e)}(),function(){"use strict";function e(){function e(e){e.recurrence=!1}function t(e){}return{clearRecurrence:e,constructRecurrence:t}}angular.module("app").factory("recurrenceService",e)}(),function(){"use strict";function e(e,t,r,n){function a(){c(),l(),e.$on("updateLabels",c),e.$on("updateTasks",l)}function o(e){n.openTaskModal(e,u.labels)}function s(e){t.toggleCompleted(e)}function c(){u.labels=r.getLabels()}function l(){u.tasks=t.getTasks()}var u=this;u.labels=[],u.tasks=[],u.showTaskModal=o,u.toggleCompleted=s,a()}angular.module("app").controller("TasksController",e),e.$inject=["$rootScope","tasksService","labelService","taskModalService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/activities/tasks/tasks.html",controller:"TasksController",controllerAs:"vm",bindToController:!0,scope:{order:"=",days:"=withinDays",inLabels:"=inGroups"}}}angular.module("app").directive("spTasks",e)}(),function(){"use strict";function e(e,t){function r(e){return u.task.create(e).then(l)}function n(e){return e.task_id?c(e.task_id,e):r(e)}function a(e){return u.task.remove(e).then(l)}function o(){return t.getTasks()}function s(e){return e.completed=!parseInt(e.completed),c(e.task_id,e).then(o)}function c(e,t){return u.task.update(e,t).then(l)}function l(e){var r=e.data;return r.success?(t.cacheTasks(),r.data):r.title}var u=this;return u.task=new e("task"),{createTask:r,createOrUpdateTask:n,deleteTask:a,getTasks:o,toggleCompleted:s,updateTask:c}}angular.module("app").factory("tasksService",e),e.$inject=["crudService","cacheService"]}(),function(){"use strict";function e(e){}angular.module("app").controller("CalendarUserController",e),e.$inject=["calendarUserService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/collab/collab.html",controller:"CalendarUserController",controllerAs:"vm",bindToController:!0,scope:{items:"=",groups:"="}}}angular.module("app").directive("spSharedCalendars",e)}(),function(){"use strict";function e(e){function t(e){return u.calendarUser.create(e).then(l)}function r(e){return e.calendarUser_id?c(e.calendarUser_id,e):t(e)}function n(e){return u.calendarUser.remove(e).then(l)}function a(){return u.calendarUser.getWhere("groups",{}).then(l)}function o(){return u.calendarUser.getWhere("users",{}).then(l)}function s(){return u.calendarUser.getWhere("activities",{}).then(l)}function c(e,t){return u.calendarUser.update(e,t).then(l)}function l(e){var t=e.data;return t.success?t.data:t.title}var u=this;return u.calendarUser=new e("calendarUser"),{createCalendarUser:t,createOrUpdateCalendarUser:r,deleteCalendarUser:n,getSharedCalendars:a,getSharedUsersForCalendar:o,getEventsForCalendar:s,updateCalendarUser:c}}angular.module("app").factory("calendarUserService",e),e.$inject=["crudService"]}(),function(){"use strict";function e(e){function t(e){return u.labelUser.create(e).then(l)}function r(e){return e.labelUser_id?c(e.labelUser_id,e):t(e)}function n(e){return u.labelUser.remove(e).then(l)}function a(){return u.labelUser.getWhere("groups",{}).then(l)}function o(){return u.labelUser.getWhere("users",{}).then(l)}function s(){return u.labelUser.getWhere("activities",{}).then(l)}function c(e,t){return u.labelUser.update(e,t).then(l)}function l(e){var t=e.data;return t.success?t.data:t.title}var u=this;return u.labelUser=new e("labelUser"),{createLabelUser:t,createOrUpdateLabelUser:r,deleteLabelUser:n,getSharedLabels:a,getSharedUsersForLabel:o,getEventsForLabel:s,updateLabelUser:c}}angular.module("app").factory("labelUserService",e),e.$inject=["crudService"]}(),function(){"use strict";function e(e,t){function r(r){var n={};return angular.extend(n,r),e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"pages/admin/modal/user.modal.html",resolve:{groups:{},item:n}}).result.then(function(e){return t.createOrUpdateUser(e).then(t.getUsers)},function(e){return Number(e)?t.deleteUser(e).then(t.getUsers):void 0})}return{openUserModal:r}}angular.module("app").factory("userModalService",e),e.$inject=["$uibModal","userService"]}(),function(){"use strict";function e(e){function t(e){return c.user.create(e).then(s)}function r(e){return e.id?o(e.id,e):t(e)}function n(e){return c.user.remove(e).then(s)}function a(){return c.user.getWhere("",{}).then(s)}function o(e,t){return c.user.update(e,t).then(s)}function s(e){var t=e.data;return t.success?t.data:t.title}var c=this;return c.user=new e("user"),{createUser:t,createOrUpdateUser:r,deleteUser:n,getUsers:a,updateUser:o}}angular.module("app").factory("userService",e),e.$inject=["crudService"]}(),function(){"use strict";function e(e,t,r){function n(){e.$on("updateUser",a)}function a(){r.getUser().then(function(e){o.user=e})}var o=this;o.user=t,n()}angular.module("app").controller("HeaderController",e),e.$inject=["$rootScope","user","headerService"]}(),function(){"use strict";function e(e,t,r){function n(){function e(e){var t=e.data;return t.success===!1?{name:"",avatar:"content/img/user.png"}:t.data}return r.getVar("all").then(e)}return{getUser:n}}angular.module("app").factory("headerService",e),e.$inject=["$http","$log","sessionService"]}(),function(){"use strict";function e(e,t,r,n,a,o){function s(){i(),d(),f.collapsed=o.getCollapsed(),e.$on("updateCalendars",i),e.$on("updateLabels",d)}function c(){f.collapsed=o.toggleSidebar()}function l(){f.collapsed=o.toggleCalendars()}function u(){f.collapsed=o.toggleLabels()}function i(){f.calendars=a.getCalendars()}function d(){f.labels=n.getLabels()}var f=this;f.collapsed={},f.labels=[],f.calendars=[],f.sharedCalendars=t,f.sharedLabels=r,f.toggleSidebar=c,f.toggleCalendars=l,f.toggleLabels=u,s()}angular.module("app").controller("SidebarController",e),e.$inject=["$rootScope","sharedCalendars","sharedLabels","labelService","calendarService","sidebarService"]}(),function(){"use strict";function e(e){function t(){e.innerWidth<600?s.collapsed={sidebar:!0,calendars:!0,labels:!0}:s.collapsed={sidebar:!1,calendars:!1,labels:!1}}function r(){return s.collapsed}function n(){return s.collapsed.sidebar=!s.collapsed.sidebar,s.collapsed.sidebar&&(s.collapsed.calendars=!0,s.collapsed.labels=!0),s.collapsed}function a(){return s.collapsed.calendars=!s.collapsed.calendars,s.collapsed.calendars||(s.collapsed.sidebar=!1),s.collapsed}function o(){return s.collapsed.labels=!s.collapsed.labels,s.collapsed.labels||(s.collapsed.sidebar=!1),s.collapsed}var s=this;return s.collapsed={},t(),{getCollapsed:r,toggleSidebar:n,toggleCalendars:a,toggleLabels:o}}angular.module("app").factory("sidebarService",e),e.$inject=["$window"]}(),function(){"use strict";function e(e,t){function r(e){return c.calendar.create(e).then(s)}function n(e){return c.calendar.remove(e).then(s)}function a(){return t.getCalendars()}function o(e,t){return c.calendar.update(e,t).then(s)}function s(e){var r=e.data;return r.success?(t.cacheCalendars(),r.data):r.title}var c=this;return c.calendar=new e("calendar"),{createCalendar:r,deleteCalendar:n,getCalendars:a,updateCalendar:o}}angular.module("app").factory("calendarService",e),e.$inject=["crudService","cacheService"]}(),function(){"use strict";function e(e,t,r,n){function a(t,a){var o={};return angular.extend(o,t),n.formatForDisplay(o),e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/activities/events/modal/event.modal.html",resolve:{groups:function(){return a},item:o}}).result.then(function(e){return n.formatForStorage(e),r.createOrUpdateEvent(e).then(r.getEvents)},function(e){return Number(e)?r.deleteEvent(e).then(r.getEvents):void 0})}function o(e){var r=n.getDisplayFormat();if(e.all_day)e.dt_start=n.toDisplayFormat(t(e.dt_start,r).startOf("day")),e.dt_end=n.toDisplayFormat(t(e.dt_start,r).endOf("day"));else{var a=t().startOf("hour").hour();e.dt_start=n.toDisplayFormat(t(e.dt_start,r).hour(a)),e.dt_end=n.toDisplayFormat(t(e.dt_start,r).hour(a).add(1,"hours"))}}return{openEventModal:a,toggleAllDay:o}}angular.module("app").factory("eventModalService",e),e.$inject=["$uibModal","moment","eventsService","formatService"]}(),function(){"use strict";function e(e,t){function r(e,t,r,n){return s(t.fullDate,r)?(u(e,{dt_start:t.fullDate,dt_end:t.fullDate.clone().endOf("day"),all_day:1},n),r):t.fullDate}function n(e){for(var t=[],r=e.clone().date(1).startOf("week"),n=0;6>n;n++)t.push(o(r,e.month())),r=r.add(1,"weeks");return t}function a(){return e()}function o(t,r){for(var n=[],a=t.clone(),o=0;7>o;o++)n.push({number:a.date(),isTargetMonth:a.month()===r,isToday:a.isSame(e(),"day"),fullDate:a}),a=a.clone().add(1,"days");return n}function s(e,t){return e.isSame(t,"day")}function c(e){return n(e[3][0].fullDate.clone().subtract(1,"months"))}function l(e){return n(e[3][0].fullDate.clone().add(1,"months"))}function u(e,r,n){e.stopPropagation(),t.openEventModal(r,n)}return{dayClicked:r,getMonth:n,getToday:a,getWeek:o,isSameDay:s,lastMonth:c,nextMonth:l,showEventModal:u}}angular.module("app").factory("calendarWidgetService",e),e.$inject=["moment","eventModalService"]}(),function(){"use strict";function e(e,t){function r(r){return e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/activities/recurrence/modal/recurrence.modal.html",resolve:{groups:function(){return n},item:r}}).result.then(function(e){t.constructRecurrence(r)},function(e){t.clearRecurrence(r)})}var n={freq:["hourly","daily","weekly","monthly","yearly"],days:["mo","tu","we","th","fr","sa","su"]};return{openRecurrenceModal:r}}angular.module("app").factory("recurrenceModalService",e),e.$inject=["$uibModal","recurrenceService"]}(),function(){"use strict";function e(e,t){function r(e){return c.label.create(e).then(s)}function n(e){return c.label.remove(e).then(s)}function a(){return t.getLabels()}function o(e,t){return c.label.update(e,t).then(s)}function s(e){var r=e.data;return r.success?(t.cacheLabels(),r.data):r.title}var c=this;return c.label=new e("label"),{createLabel:r,deleteLabel:n,getLabels:a,updateLabel:o}}angular.module("app").factory("labelService",e),e.$inject=["crudService","cacheService"]}(),function(){"use strict";function e(e,t,r){function n(t,n){var a={};angular.extend(a,t),e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/activities/tasks/modal/subtask.modal.html",resolve:{groups:n,item:a}}).result.then(function(e){r.createOrUpdateSubtask(e.subtask,e.task)},function(e){"string"!=typeof e&&r.deleteSubtask(e.subtask,e.task)})}return{openSubtaskModal:n}}angular.module("app").factory("subtaskModalService",e),e.$inject=["$uibModal","labelService","subtasksService"]}(),function(){"use strict";function e(e,t,r){function n(n,a){var o={};return angular.extend(o,n),r.formatForDisplay(o),e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/activities/tasks/modal/task.modal.html",resolve:{groups:function(){return a},item:o}}).result.then(function(e){return e=r.formatForStorage(e),t.createOrUpdateTask(e).then(t.getTasks)},function(e){return Number(e)?t.deleteTask(e).then(t.getTasks):void 0})}return{openTaskModal:n}}angular.module("app").factory("taskModalService",e),e.$inject=["$uibModal","tasksService","formatService"]}(),function(){"use strict";function e(e,t){function r(e){t.openSubtaskModal(e,a.task)}function n(t){e.toggleCompleted(t)}var a=this;a.showSubtaskModal=r,a.toggleCompleted=n}angular.module("app").controller("SubtasksController",e),e.$inject=["subtasksService","subtaskModalService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/activities/tasks/subtasks/subtasks.html",controller:"SubtasksController",controllerAs:"st",bindToController:!0,scope:{task:"="}}}angular.module("app").directive("spSubtasks",e)}(),function(){"use strict";function e(e,t){function r(e,t){t.subtasks||(t.subtasks={currentId:1,list:[]}),void 0===e.id&&(e.id=t.subtasks.currentId++,e.completed=!1,t.subtasks.list.push(e))}function n(e,t){t.subtasks.list.splice(t.subtasks.list.indexOf(e),1)}function a(e){e.completed=!e.completed}return{createOrUpdateSubtask:r,deleteSubtask:n,toggleCompleted:a}}angular.module("app").factory("subtasksService",e),e.$inject=["$http","$log"]}();
//# sourceMappingURL=data:application/json;base64,
