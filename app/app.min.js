!function(){"use strict";function o(){}angular.module("app",["ngRoute"]).controller("AppController",o)}(),function(){"use strict";function o(o){o.when("/login",{templateUrl:"login/login.html",controller:"LoginController",controllerAs:"vm"}).when("/logout",{templateUrl:"logout/logout.html",controller:"LogoutController",controllerAs:"vm"}).when("/register",{templateUrl:"register/register.html",controller:"RegisterController",controllerAs:"vm"}).when("/dashboard",{templateUrl:"dashboard/dashboard.html",controller:"DashboardController",controllerAs:"vm"}).otherwise({redirectTo:"/dashboard"})}angular.module("app").config(o),o.$inject=["$routeProvider"]}(),function(){"use strict";function o(){function o(o,r,e,l){function t(r){return r===o.otherModel.$viewValue}function n(){l.$validate()}l.$validators.spCompareTo=t,o.$watchCollection("otherModel",n)}return{require:"ngModel",scope:{otherModel:"=spCompareTo"},link:o}}angular.module("app").directive("spCompareTo",o)}(),function(){"use strict";function o(){}angular.module("app").controller("DashboardController",o)}(),function(){"use strict";function o(){}angular.module("app").controller("LoginController",o)}(),function(){"use strict";function o(){function o(){}var r=this;r.register=o}angular.module("app").controller("RegisterController",o)}(),function(){"use strict";function o(){var o=this;o.collapsed=!0,o.toggleSidebar=function(){o.collapsed=!o.collapsed}}angular.module("app").controller("SidebarController",o)}(),function(){"use strict";function o(){function o(o,r,e){function l(o){o?r.removeClass("collapsed"):r.addClass("collapsed")}o.$watch(e.sidebarDirective,l)}return{link:o,templateUrl:"sidebar/sidebar.html",controller:"SidebarController",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("spSidebar",o)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5taW4uanMiXSwibmFtZXMiOlsiQXBwQ29udHJvbGxlciIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyQXMiLCJvdGhlcndpc2UiLCJyZWRpcmVjdFRvIiwiJGluamVjdCIsImNvbXBhcmVUbyIsImxpbmsiLCJzY29wZSIsImVsZW1lbnQiLCJhdHRycyIsIm5nTW9kZWwiLCJjb21wYXJlVmFsdWVzIiwidmlld1ZhbHVlIiwib3RoZXJNb2RlbCIsIiR2aWV3VmFsdWUiLCJ2YWxpZGF0ZU9uQ2hhbmdlIiwiJHZhbGlkYXRlIiwiJHZhbGlkYXRvcnMiLCJzcENvbXBhcmVUbyIsIiR3YXRjaENvbGxlY3Rpb24iLCJyZXF1aXJlIiwiZGlyZWN0aXZlIiwiRGFzaGJvYXJkQ29udHJvbGxlciIsIkxvZ2luQ29udHJvbGxlciIsIlJlZ2lzdGVyQ29udHJvbGxlciIsInJlZ2lzdGVyIiwidm0iLCJ0aGlzIiwiU2lkZWJhckNvbnRyb2xsZXIiLCJjb2xsYXBzZWQiLCJ0b2dnbGVTaWRlYmFyIiwic2lkZWJhckRpcmVjdGl2ZSIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCIkd2F0Y2giLCJiaW5kVG9Db250cm9sbGVyIl0sIm1hcHBpbmdzIjoiQ0FBQSxXQUNDLFlBTUEsU0FBU0EsTUFKVEMsUUFDRUMsT0FBTyxPQUFRLFlBQ2ZDLFdBQVcsZ0JBQWlCSCxNQUsvQixXQUNDLFlBUUEsU0FBU0ksR0FBT0MsR0FDZkEsRUFDRUMsS0FBSyxVQUNMQyxZQUFhLG1CQUNiSixXQUFZLGtCQUNaSyxhQUFjLE9BRWRGLEtBQUssV0FDTEMsWUFBYSxxQkFDYkosV0FBWSxtQkFDWkssYUFBYyxPQUVkRixLQUFLLGFBQ0xDLFlBQWEseUJBQ2JKLFdBQVkscUJBQ1pLLGFBQWMsT0FFZEYsS0FBSyxjQUNMQyxZQUFhLDJCQUNiSixXQUFZLHNCQUNaSyxhQUFjLE9BRWRDLFdBQ0FDLFdBQVksZUE3QmZULFFBQ0VDLE9BQU8sT0FDUEUsT0FBT0EsR0FFVEEsRUFBT08sU0FBVyxxQkE2Qm5CLFdBQ0MsWUFVQSxTQUFTQyxLQVNSLFFBQVNDLEdBQUtDLEVBQU9DLEVBQVNDLEVBQU9DLEdBS3BDLFFBQVNDLEdBQWNDLEdBQ3RCLE1BQVFBLEtBQWNMLEVBQU1NLFdBQVdDLFdBR3hDLFFBQVNDLEtBQ1JMLEVBQVFNLFlBVFROLEVBQVFPLFlBQVlDLFlBQWNQLEVBRWxDSixFQUFNWSxpQkFBaUIsYUFBY0osR0FYdEMsT0FDQ0ssUUFBUyxVQUNUYixPQUNDTSxXQUFZLGdCQUViUCxLQUFNQSxHQVZSWixRQUNFQyxPQUFPLE9BQ1AwQixVQUFVLGNBQWVoQixNQTBCNUIsV0FDQyxZQU1BLFNBQVNpQixNQUpUNUIsUUFDRUMsT0FBTyxPQUNQQyxXQUFXLHNCQUF1QjBCLE1BTXJDLFdBQ0MsWUFNQSxTQUFTQyxNQUpUN0IsUUFDRUMsT0FBTyxPQUNQQyxXQUFXLGtCQUFtQjJCLE1BTWpDLFdBQ0MsWUFNQSxTQUFTQyxLQUtSLFFBQVNDLE1BSlQsR0FBSUMsR0FBS0MsSUFFVEQsR0FBR0QsU0FBV0EsRUFQZi9CLFFBQ0VDLE9BQU8sT0FDUEMsV0FBVyxxQkFBc0I0QixNQVdwQyxXQUNDLFlBTUEsU0FBU0ksS0FDUixHQUFJRixHQUFLQyxJQUVURCxHQUFHRyxXQUFZLEVBRWZILEVBQUdJLGNBQWdCLFdBQ2xCSixFQUFHRyxXQUFhSCxFQUFHRyxXQVZyQm5DLFFBQ0VDLE9BQU8sT0FDUEMsV0FBVyxvQkFBcUJnQyxNQVluQyxXQUNDLFlBTUEsU0FBU0csS0FTUixRQUFTekIsR0FBS0MsRUFBT0MsRUFBU0MsR0FHN0IsUUFBU3FCLEdBQWNELEdBQ2xCQSxFQUNIckIsRUFBUXdCLFlBQVksYUFFcEJ4QixFQUFReUIsU0FBUyxhQU5uQjFCLEVBQU0yQixPQUFPekIsRUFBTXNCLGlCQUFrQkQsR0FUdEMsT0FDQ3hCLEtBQU1BLEVBQ05OLFlBQWEsdUJBQ2JKLFdBQVksb0JBQ1pLLGFBQWMsS0FDZGtDLGtCQUFrQixHQVZwQnpDLFFBQ0VDLE9BQU8sT0FDUDBCLFVBQVUsWUFBYVUiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdGFuZ3VsYXJcclxuXHRcdC5tb2R1bGUoJ2FwcCcsIFsnbmdSb3V0ZSddKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0FwcENvbnRyb2xsZXInLCBBcHBDb250cm9sbGVyKTtcclxuXHJcblx0ZnVuY3Rpb24gQXBwQ29udHJvbGxlcigpIHtcclxuXHR9XHJcbn0pKCk7XG4oZnVuY3Rpb24oKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cclxuXHRhbmd1bGFyXHJcblx0XHQubW9kdWxlKCdhcHAnKVxyXG5cdFx0LmNvbmZpZyhjb25maWcpO1xyXG5cclxuXHRjb25maWcuJGluamVjdCA9IFsnJHJvdXRlUHJvdmlkZXInXTtcclxuXHJcblx0ZnVuY3Rpb24gY29uZmlnKCRyb3V0ZVByb3ZpZGVyKSB7XHJcblx0XHQkcm91dGVQcm92aWRlclxyXG5cdFx0XHQud2hlbignL2xvZ2luJywge1xyXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAnbG9naW4vbG9naW4uaHRtbCcsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogJ0xvZ2luQ29udHJvbGxlcicsXHJcblx0XHRcdFx0Y29udHJvbGxlckFzOiAndm0nXHJcblx0XHRcdH0pXHJcblx0XHRcdC53aGVuKCcvbG9nb3V0Jywge1xyXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAnbG9nb3V0L2xvZ291dC5odG1sJyxcclxuXHRcdFx0XHRjb250cm9sbGVyOiAnTG9nb3V0Q29udHJvbGxlcicsXHJcblx0XHRcdFx0Y29udHJvbGxlckFzOiAndm0nXHJcblx0XHRcdH0pXHJcblx0XHRcdC53aGVuKCcvcmVnaXN0ZXInLCB7XHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICdyZWdpc3Rlci9yZWdpc3Rlci5odG1sJyxcclxuXHRcdFx0XHRjb250cm9sbGVyOiAnUmVnaXN0ZXJDb250cm9sbGVyJyxcclxuXHRcdFx0XHRjb250cm9sbGVyQXM6ICd2bSdcclxuXHRcdFx0fSlcclxuXHRcdFx0LndoZW4oJy9kYXNoYm9hcmQnLCB7XHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICdkYXNoYm9hcmQvZGFzaGJvYXJkLmh0bWwnLFxyXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdEYXNoYm9hcmRDb250cm9sbGVyJyxcclxuXHRcdFx0XHRjb250cm9sbGVyQXM6ICd2bSdcclxuXHRcdFx0fSlcclxuXHRcdFx0Lm90aGVyd2lzZSh7XHJcblx0XHRcdFx0cmVkaXJlY3RUbzogJy9kYXNoYm9hcmQnXHJcblx0XHRcdH0pO1xyXG5cdH1cclxufSkoKTtcbihmdW5jdGlvbigpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdC8qKlxyXG5cdCogQ29tcGFyZSBhbiBpbnB1dCBmaWVsZCB0byBhbm90aGVyIGZpZWxkLCBkZXRlcm1pbmVkIGJ5IHRoZSBkZXYuXHJcblx0Ki9cclxuXHJcblx0YW5ndWxhclxyXG5cdFx0Lm1vZHVsZSgnYXBwJylcclxuXHRcdC5kaXJlY3RpdmUoJ3NwQ29tcGFyZVRvJywgY29tcGFyZVRvKTtcclxuXHJcblx0ZnVuY3Rpb24gY29tcGFyZVRvKCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVxdWlyZTogJ25nTW9kZWwnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdG90aGVyTW9kZWw6ICc9c3BDb21wYXJlVG8nXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGxpbmtcclxuXHRcdH07XHJcblxyXG5cdFx0ZnVuY3Rpb24gbGluayhzY29wZSwgZWxlbWVudCwgYXR0cnMsIG5nTW9kZWwpIHtcclxuXHRcdFx0bmdNb2RlbC4kdmFsaWRhdG9ycy5zcENvbXBhcmVUbyA9IGNvbXBhcmVWYWx1ZXM7XHJcblxyXG5cdFx0XHRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKCdvdGhlck1vZGVsJywgdmFsaWRhdGVPbkNoYW5nZSk7XHJcblxyXG5cdFx0XHRmdW5jdGlvbiBjb21wYXJlVmFsdWVzKHZpZXdWYWx1ZSkge1xyXG5cdFx0XHRcdHJldHVybiAodmlld1ZhbHVlID09PSBzY29wZS5vdGhlck1vZGVsLiR2aWV3VmFsdWUpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRmdW5jdGlvbiB2YWxpZGF0ZU9uQ2hhbmdlKCkge1xyXG5cdFx0XHRcdG5nTW9kZWwuJHZhbGlkYXRlKCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0pKCk7XG4oZnVuY3Rpb24oKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cclxuXHRhbmd1bGFyXHJcblx0XHQubW9kdWxlKCdhcHAnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0Rhc2hib2FyZENvbnRyb2xsZXInLCBEYXNoYm9hcmRDb250cm9sbGVyKTtcclxuXHJcblx0ZnVuY3Rpb24gRGFzaGJvYXJkQ29udHJvbGxlcigpIHtcclxuXHJcblx0fVxyXG59KSgpO1xuKGZ1bmN0aW9uKCkge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcblx0YW5ndWxhclxyXG5cdFx0Lm1vZHVsZSgnYXBwJylcclxuXHRcdC5jb250cm9sbGVyKCdMb2dpbkNvbnRyb2xsZXInLCBMb2dpbkNvbnRyb2xsZXIpO1xyXG5cclxuXHRmdW5jdGlvbiBMb2dpbkNvbnRyb2xsZXIoKSB7XHJcblxyXG5cdH1cclxufSkoKTtcbihmdW5jdGlvbigpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdGFuZ3VsYXJcclxuXHRcdC5tb2R1bGUoJ2FwcCcpXHJcblx0XHQuY29udHJvbGxlcignUmVnaXN0ZXJDb250cm9sbGVyJywgUmVnaXN0ZXJDb250cm9sbGVyKTtcclxuXHJcblx0ZnVuY3Rpb24gUmVnaXN0ZXJDb250cm9sbGVyKCkge1xyXG5cdFx0dmFyIHZtID0gdGhpcztcclxuXHJcblx0XHR2bS5yZWdpc3RlciA9IHJlZ2lzdGVyO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHJlZ2lzdGVyKCkge1xyXG5cdFx0fVxyXG5cdH1cclxufSkoKTtcbihmdW5jdGlvbigpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdGFuZ3VsYXJcclxuXHRcdC5tb2R1bGUoJ2FwcCcpXHJcblx0XHQuY29udHJvbGxlcignU2lkZWJhckNvbnRyb2xsZXInLCBTaWRlYmFyQ29udHJvbGxlcik7XHJcblxyXG5cdGZ1bmN0aW9uIFNpZGViYXJDb250cm9sbGVyKCkge1xyXG5cdFx0dmFyIHZtID0gdGhpcztcclxuXHJcblx0XHR2bS5jb2xsYXBzZWQgPSB0cnVlO1xyXG5cclxuXHRcdHZtLnRvZ2dsZVNpZGViYXIgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0dm0uY29sbGFwc2VkID0gIXZtLmNvbGxhcHNlZDtcclxuXHRcdH07XHJcblx0fVxyXG59KSgpO1xuKGZ1bmN0aW9uKCkge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcblx0YW5ndWxhclxyXG5cdFx0Lm1vZHVsZSgnYXBwJylcclxuXHRcdC5kaXJlY3RpdmUoJ3NwU2lkZWJhcicsIHNpZGViYXJEaXJlY3RpdmUpO1xyXG5cclxuXHRmdW5jdGlvbiBzaWRlYmFyRGlyZWN0aXZlKCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0bGluazogbGluayxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICdzaWRlYmFyL3NpZGViYXIuaHRtbCcsXHJcblx0XHRcdGNvbnRyb2xsZXI6ICdTaWRlYmFyQ29udHJvbGxlcicsXHJcblx0XHRcdGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuXHRcdFx0YmluZFRvQ29udHJvbGxlcjogdHJ1ZVxyXG5cdFx0fTtcclxuXHJcblx0XHRmdW5jdGlvbiBsaW5rKHNjb3BlLCBlbGVtZW50LCBhdHRycykge1xyXG5cdFx0XHRzY29wZS4kd2F0Y2goYXR0cnMuc2lkZWJhckRpcmVjdGl2ZSwgdG9nZ2xlU2lkZWJhcik7XHJcblxyXG5cdFx0XHRmdW5jdGlvbiB0b2dnbGVTaWRlYmFyKGNvbGxhcHNlZCkge1xyXG5cdFx0XHRcdGlmIChjb2xsYXBzZWQpIHtcclxuXHRcdFx0XHRcdGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlZCcpO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRlbGVtZW50LmFkZENsYXNzKCdjb2xsYXBzZWQnKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
