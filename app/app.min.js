!function(){"use strict";function e(e,t){e.$on("$stateChangeError",t.stateChangeError)}angular.module("app",["ui.router","ui.bootstrap","angularMoment"]).controller("AppController",e),e.$inject=["$rootScope","appService"]}(),function(){"use strict";function e(e,t){function n(e){return e.getCalendars()}function r(e){return e.getEvents()}function o(e){return e.getLabels()}function a(e){return e.getTasks()}function c(e){return e.getUser()}function s(e){return e.isAuthenticated()}e.state("root",{url:"",templateUrl:"index.html","abstract":!0,resolve:{tasks:["tasksService",a],events:["eventsService",r],labels:["labelService",o],calendars:["calendarService",n],user:["headerService",c]},views:{header:{templateUrl:"pages/layout/header/header.html",controller:"HeaderController",controllerAs:"hc"},sidebar:{templateUrl:"pages/layout/sidebar/sidebar.html",controller:"SidebarController",controllerAs:"sc"}}}).state("login",{url:"/login",parent:"root",views:{"content@":{templateUrl:"modules/login/login.html",controller:"LoginController",controllerAs:"vm"}}}).state("logout",{url:"/logout",parent:"root",views:{"content@":{templateUrl:"modules/logout/logout.html",controller:"LogoutController",controllerAs:"vm"}}}).state("register",{url:"/register",parent:"root",views:{"content@":{templateUrl:"pages/register/register.html",controller:"RegisterController",controllerAs:"vm"}}}).state("dashboard",{url:"/dashboard",parent:"root",views:{"content@":{templateUrl:"pages/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"vm",resolve:{isAuthenticated:["accessService",s]}}}}).state("labels",{url:"/labels",parent:"root"}).state("labels.label",{url:"/:labelId",views:{"content@":{template:"In progress"}}}).state("inbox",{url:"/inbox",parent:"root",views:{"content@":{templateUrl:"pages/tasks/inbox.html",controller:"ActivityController",controllerAs:"vm",resolve:{isAuthenticated:["accessService",s],items:["tasksService",a],groups:["labelService",o]}}}}).state("today",{url:"/today",parent:"root",views:{"content@":{templateUrl:"pages/tasks/today.html",controller:"ActivityController",controllerAs:"vm",resolve:{isAuthenticated:["accessService",s],items:["tasksService",a],groups:["labelService",o]}}}}).state("week",{url:"/week",parent:"root",views:{"content@":{templateUrl:"pages/tasks/week.html",controller:"ActivityController",controllerAs:"vm",resolve:{isAuthenticated:["accessService",s],items:["tasksService",a],groups:["labelService",o]}}}}).state("calendar",{url:"/calendar",parent:"root",views:{"content@":{templateUrl:"pages/calendar/calendar.html",controller:"ActivityController",controllerAs:"vm",resolve:{isAuthenticated:["accessService",s],items:["eventsService",r],groups:["calendarService",n]}}}}),t.otherwise("/dashboard")}angular.module("app").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e,t){function n(n,r,o,a){a===t.UNAUTHORIZED?e.path("/login"):a===t.FORBIDDEN&&e.path("/forbidden")}return{stateChangeError:n}}angular.module("app").factory("appService",e),e.$inject=["$location","statusService"]}(),function(){"use strict";function e(e){return function(t,n){for(var r=[],o=0;o<t.length;o++){var a=n.isSame(e(t[o].dt_start),"day");a||(a=n.isSame(e(t[o].dt_end),"day")),a&&r.push(t[o])}return r}}angular.module("app").filter("sameDayAs",e),e.$inject=["moment"]}(),function(){"use strict";function e(e){return function(t,n){if(!n)return t;for(var r=[],o=0;o<t.length;o++){(!t[o].due||t[o].due&&e(t[o].due).isBefore(e().add(n,"days")))&&r.push(t[o])}return r}}angular.module("app").filter("withinDays",e),e.$inject=["moment"]}(),function(){"use strict";function e(e,t,n){var r=this;r.items=t,r.groups=n}angular.module("app").controller("ActivityController",e),e.$inject=["isAuthenticated","items","groups"]}(),function(){"use strict";function e(e,t,n,r,o){var a=this;a.tasks=t,a.events=n,a.labels=r,a.calendars=o}angular.module("app").controller("DashboardController",e),e.$inject=["isAuthenticated","tasks","events","labels","calendars"]}(),function(){"use strict";function e(e){function t(){n.loading=!0,e.register(n.user).then(function(e){n.loading=!1,n.error=e})}var n=this;n.error="",n.loading=!1,n.register=t}angular.module("app").controller("RegisterController",e),e.$inject=["registerService"]}(),function(){"use strict";function e(e,t,n){function r(n){function r(n){return"false"===n.success?(t.error(n.title),n.title):void e.url("/login")}return o.crud.create(n).then(r)}var o=this;return o.crud=new n("user"),{register:r}}angular.module("app").factory("registerService",e),e.$inject=["$location","$log","crudService"]}(),function(){"use strict";function e(e,t){function n(e){switch(this.type=e,this.base="api/",e){case"event":case"calendar":this.base+="activity/calendar/";break;case"label":case"task":this.base+="activity/task/";break;default:this.base+=e+"/"}this.base+=e+"Manager.php"}function r(t){return e.get(this.base+"?id="+t).then(u)["catch"](i)}function o(t,n){return e.get(this.base+"?usewhere=true&where="+escape(t)+"&id="+n).then(u)["catch"](i)}function a(t){return t=this.removeUnecessaryKeys(t),e.post(this.base,t).then(u)["catch"](i)}function c(t,n){return n=this.removeUnecessaryKeys(n),e.put(this.base+"?id="+t,n).then(u)["catch"](i)}function s(t){return e["delete"](this.base+"?id="+t).then(u)["catch"](i)}function l(t,n){return e["delete"](this.base+"?where=true&id="+n,t).then(u)["catch"](i)}function u(e){return e}function i(e){return t.error(e),{success:"false",title:"Error when querying server.",message:e}}function d(e){for(var t=["id","person_id",this.type+"_id","activity_info_id","parent_name"],n=0;n<t.length;n++)delete e[t[n]];return e}var p=n;return p.prototype={get:r,getWhere:o,create:a,update:c,remove:s,removeWhere:l,removeUnecessaryKeys:d},p}angular.module("app").factory("crudService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(e,t){function n(t){return e.get(c.base+t).then(o)["catch"](a)}function r(t,n){return e.post(c.base+t,n).then(o)["catch"](a)}function o(e){return e}function a(e){return t.error(e),{success:"false",title:"Error when accessing variable.",message:e}}var c=this;return c.base="api/session/sessionVarManager.php?var=",{getVar:n,setVar:r}}angular.module("app").factory("sessionService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(e){this.user=e}angular.module("app").controller("HeaderController",e),e.$inject=["user"]}(),function(){"use strict";function e(e,t,n){function r(){function e(e){var t=e.data;return t.success===!1?{name:!1,url:"#/login"}:{name:t.data,url:"#/dashboard"}}return n.getVar("name").then(e)}return{getUser:r}}angular.module("app").factory("headerService",e),e.$inject=["$http","$log","sessionService"]}(),function(){"use strict";function e(e,t){var n=this;n.collapsed=!0,n.labels=e,n.calendars=t}angular.module("app").controller("SidebarController",e),e.$inject=["labels","calendars"]}(),function(){"use strict";function e(e,t,n,r){function o(){p.today=t.getToday(),p.selectedDay=p.today,p.month=t.getMonth(p.today)}function a(e){return t.getEndOfDay(e)}function c(e){return t.isSameDay(e,p.selectedDay)}function s(e){p.selectedDay=e.fullDate}function l(e){r.openEventModal(e,p.calendars).then(d)}function u(){p.month=t.lastMonth(p.month)}function i(){p.month=t.nextMonth(p.month)}function d(e){e&&(p.events=e)}var p=this;p.today=null,p.selectedDay=null,p.month=null,p.isSameDayAsSelected=c,p.getEndOfDay=a,p.selectDay=s,p.showEventModal=l,p.lastMonth=u,p.nextMonth=i,o()}angular.module("app").controller("EventsController",e),e.$inject=["moment","calendarWidgetService","eventsService","eventModalService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/events/events.html",controller:"EventsController",controllerAs:"vm",bindToController:!0,scope:{events:"=",calendars:"="}}}angular.module("app").directive("spEvents",e)}(),function(){"use strict";function e(e,t,n,r){function o(e){return i.event.create(e).then(u)}function a(e){return e.event_id?l(e.event_id,e):o(e)}function c(e){return i.event.remove(e).then(u)}function s(){function e(e){var t=e.data;return t.success?i.event.getWhere("",t.data).then(u):t.title}return r.getVar("id").then(e)}function l(e,t){return i.event.update(e,t).then(u)}function u(e){var t=e.data;return t.success?t.data:t.title}var i=this;return i.event=new n("event"),{createEvent:o,createOrUpdateEvent:a,deleteEvent:c,getEvents:s,updateEvent:l}}angular.module("app").factory("eventsService",e),e.$inject=["$http","$log","crudService","sessionService"]}(),function(){"use strict";function e(){function e(e,t,n,r){t[0].focus()}return{restrict:"A",link:e}}angular.module("app").directive("spAutoFocus",e)}(),function(){"use strict";function e(){function e(e,t,n,r){function o(){s()}function a(t){return t===e.otherModel.$viewValue}function c(e,t){r.$validate()}var s=e.$watch("otherModel",c);r.$validators.spCompareTo=a,t.on("$destroy",o)}return{require:"ngModel",scope:{otherModel:"=spCompareTo"},link:e}}angular.module("app").directive("spCompareTo",e)}(),function(){"use strict";function e(e){function t(){n.loading=!0,e.login(n.user).then(function(e){n.loading=!1,n.error=e})}var n=this;n.loading=!1,n.error="",n.login=t}angular.module("app").controller("LoginController",e),e.$inject=["loginService"]}(),function(){"use strict";function e(e,t,n){function r(r){function o(e){return e.data.success===!1?e.data.title:void t.path("/dashboard")}function a(e){return n.error(e),"Something went wrong. Please try again."}return e.post("api/user/loginManager.php",r).then(o)["catch"](a)}return{login:r}}angular.module("app").factory("loginService",e),e.$inject=["$http","$location","$log"]}(),function(){"use strict";function e(e,t,n){function r(){e.dismiss("cancel")}function o(){e.close()}function a(t){e.close(t)}function c(t){e.dismiss(t)}var s=this;s.groups=t,s.item=n,s.cancel=r,s.close=o,s.confirm=a,s.remove=c}angular.module("app").controller("ModalController",e),e.$inject=["$uibModalInstance","groups","item"]}(),function(){"use strict";function e(e){function t(){n.item.recurrence&&e.openRecurrenceModal(n.item)}var n=this;n.showRecurrenceModal=t}angular.module("app").controller("RecurrenceController",e),e.$inject=["recurrenceModalService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/recurrence/recurrence.html",controller:"RecurrenceController",controllerAs:"rc",bindToController:!0,scope:{item:"="}}}angular.module("app").directive("spRepeat",e)}(),function(){"use strict";function e(){function e(e){e.recurrence=!1}function t(e){}return{clearRecurrence:e,constructRecurrence:t}}angular.module("app").factory("recurrenceService",e)}(),function(){"use strict";function e(e,t){function n(e){t.openTaskModal(e,a.labels).then(o)}function r(t){e.toggleCompleted(t).then(o)}function o(e){e&&(a.tasks=e)}var a=this;a.showTaskModal=n,a.toggleCompleted=r}angular.module("app").controller("TasksController",e),e.$inject=["tasksService","taskModalService"]}(),function(){"use strict";function e(e){return{templateUrl:"modules/tasks/tasks.html",controller:"TasksController",controllerAs:"vm",bindToController:!0,scope:{tasks:"=",labels:"=",order:"=",days:"=withinDays"}}}angular.module("app").directive("spTasks",e),e.$inject=["$filter"]}(),function(){"use strict";function e(e,t,n,r){function o(e){return d.task.create(e).then(i)}function a(e){return e.task_id?u(e.task_id,e):o(e)}function c(e){return d.task.remove(e).then(i)}function s(){function e(e){var t=e.data;return t.success?d.task.getWhere("",t.data).then(i):t.title}return r.getVar("id").then(e)}function l(e){return e.completed=!parseInt(e.completed),u(e.task_id,e).then(s)}function u(e,t){return d.task.update(e,t).then(i)}function i(e){var t=e.data;return t.success?t.data:t.title}var d=this;return d.task=new n("task"),{createTask:o,createOrUpdateTask:a,deleteTask:c,getTasks:s,toggleCompleted:l,updateTask:u}}angular.module("app").factory("tasksService",e),e.$inject=["$http","$log","crudService","sessionService"]}(),function(){"use strict";function e(e,t,n,r){function o(){function e(e){return e.data.success!==!1?c.resolve(r.OK):c.reject(r.UNAUTHORIZED),c.promise}return n.getVar("name").then(e)}function a(){}var c=t.defer();return{isAuthenticated:o,isAdmin:a}}angular.module("app").factory("accessService",e),e.$inject=["$location","$q","sessionService","statusService"]}(),function(){"use strict";function e(){return{OK:200,UNAUTHORIZED:401,FORBIDDEN:403}}angular.module("app").service("statusService",e)}(),function(){"use strict";function e(e,t,n){function r(e,t){return n.uploadFile(e).then(function(e){return e})}var o=this;o.uploadFile=r}angular.module("app").controller("UploadController",e),e.$inject=["$scope","$http","uploadService"]}(),function(){"use strict";function e(e){function t(t,n,r){function o(e){t.$apply(function(){var e=n[0].files[0];e.size<=a?t.uc.uploadFile(e).then(function(e){t.spFileChange=e}):alert("File must be less than "+a/1024/1024+"MB.")})}var a=2097152;e(r.spFileChange);n[0].addEventListener("change",o,!1)}return{restrict:"A",controller:"UploadController",controllerAs:"uc",link:t,scope:{spFileChange:"="}}}angular.module("app").directive("spFileChange",e),e.$inject=["$parse"]}(),function(){"use strict";function e(e,t){function n(n){var r=new FormData;return r.append("file",n),e.post("api/upload/uploadManager.php",r,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){return e.data.success?e.data.data:(t.error(e.title),"")})["catch"](function(e){t.error(e)})}return{uploadFile:n}}angular.module("app").factory("uploadService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(e,t,n,r){function o(e){return u.calendar.create(e).then(l)}function a(e){return u.calendar.remove(e).then(l)}function c(){function e(e){var t=e.data;return t.success?u.calendar.getWhere("person_id="+t.data,"").then(l):t.title}return r.getVar("id").then(e)}function s(e,t){return u.calendar.update(e,t).then(l)}function l(e){var t=e.data;return t.success?t.data:t.title}var u=this;return u.calendar=new n("calendar"),{createCalendar:o,deleteCalendar:a,getCalendars:c,updateCalendar:s}}angular.module("app").factory("calendarService",e),e.$inject=["$http","$log","crudService","sessionService"]}(),function(){"use strict";function e(e,t,n){function r(t,r){return e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/events/modal/event.modal.html",resolve:{groups:function(){return r},item:t}}).result.then(function(e){return n.createOrUpdateEvent(e).then(n.getEvents)},function(e){return"string"!=typeof e?n.deleteEvent(e).then(n.getEvents):void 0})}return{openEventModal:r}}angular.module("app").factory("eventModalService",e),e.$inject=["$uibModal","calendarService","eventsService"]}(),function(){"use strict";function e(e){function t(e){return e.clone().add(1,"day").subtract(1,"ms")}function n(e){for(var t=[],n=e.clone().date(1).startOf("week"),r=0;6>r;r++)t.push(o(n,e.month())),n=n.add(1,"weeks");return t}function r(){return e()}function o(t,n){for(var r=[],o=t.clone(),a=0;7>a;a++)r.push({number:o.date(),isTargetMonth:o.month()===n,isToday:o.isSame(e(),"day"),fullDate:o}),o=o.clone().add(1,"days");return r}function a(e,t){return e.isSame(t,"day")}function c(e){return n(e[3][0].fullDate.clone().subtract(1,"months"))}function s(e){return n(e[3][0].fullDate.clone().add(1,"months"))}return{getEndOfDay:t,getMonth:n,getToday:r,getWeek:o,isSameDay:a,lastMonth:c,nextMonth:s}}angular.module("app").factory("calendarWidgetService",e),e.$inject=["moment"]}(),function(){"use strict";function e(e,t){function n(n){return e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/recurrence/modal/recurrence.modal.html",resolve:{groups:function(){return r},item:n}}).result.then(function(e){t.constructRecurrence(n)},function(e){t.clearRecurrence(n)})}var r={freq:["hourly","daily","weekly","monthly","yearly"],days:["mo","tu","we","th","fr","sa","su"]};return{openRecurrenceModal:n}}angular.module("app").factory("recurrenceModalService",e),e.$inject=["$uibModal","recurrenceService"]}(),function(){"use strict";function e(e,t,n,r){function o(e){return u.label.create(e).then(l)}function a(e){return u.label.remove(e).then(l)}function c(){function e(e){var t=e.data;return t.success?u.label.getWhere("person_id="+t.data,"").then(l):t.title}return r.getVar("id").then(e)}function s(e,t){return u.label.update(e,t).then(l)}function l(e){var t=e.data;return t.success?t.data:t.title}var u=this;return u.label=new n("label"),{createLabel:o,deleteLabel:a,getLabels:c,updateLabel:s}}angular.module("app").factory("labelService",e),e.$inject=["$http","$log","crudService","sessionService"]}(),function(){"use strict";function e(e,t,n){function r(t,r){e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/tasks/modal/subtask.modal.html",resolve:{groups:r,item:t}}).result.then(function(e){n.createOrUpdateSubtask(e.subtask,e.task)},function(e){"string"!=typeof e&&n.deleteSubtask(e.subtask,e.task)})}return{openSubtaskModal:r}}angular.module("app").factory("subtaskModalService",e),e.$inject=["$uibModal","labelService","subtasksService"]}(),function(){"use strict";function e(e,t,n){function r(t,r){return e.open({controller:"ModalController",controllerAs:"vm",templateUrl:"modules/tasks/modal/task.modal.html",resolve:{groups:function(){return r},item:t}}).result.then(function(e){return n.createOrUpdateTask(e).then(n.getTasks)},function(e){return"string"!=typeof e?n.deleteTask(e).then(n.getTasks):void 0})}return{openTaskModal:r}}angular.module("app").factory("taskModalService",e),e.$inject=["$uibModal","labelService","tasksService"]}(),function(){"use strict";function e(e,t){function n(e){t.openSubtaskModal(e,o.task)}function r(t){e.toggleCompleted(t)}var o=this;o.showSubtaskModal=n,o.toggleCompleted=r}angular.module("app").controller("SubtasksController",e),e.$inject=["subtasksService","subtaskModalService"]}(),function(){"use strict";function e(){return{templateUrl:"modules/tasks/subtasks/subtasks.html",controller:"SubtasksController",controllerAs:"st",bindToController:!0,scope:{task:"="}}}angular.module("app").directive("spSubtasks",e)}(),function(){"use strict";function e(e,t){function n(e,t){t.subtasks||(t.subtasks={currentId:1,list:[]}),void 0===e.id&&(e.id=t.subtasks.currentId++,e.completed=!1,t.subtasks.list.push(e))}function r(e,t){t.subtasks.list.splice(t.subtasks.list.indexOf(e),1)}function o(e){e.completed=!e.completed}return{createOrUpdateSubtask:n,deleteSubtask:r,toggleCompleted:o}}angular.module("app").factory("subtasksService",e),e.$inject=["$http","$log"]}();
//# sourceMappingURL=data:application/json;base64,
