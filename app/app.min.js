!function(){"use strict";function e(e,n,t){e.$on("$locationChangeStart",t.checkAuthentication)}angular.module("app",["ngRoute"]).controller("AppController",e),e.$inject=["$rootScope","$location","appService"]}(),function(){"use strict";function e(e){e.when("/login",{templateUrl:"modules/login/login.html",controller:"LoginController",controllerAs:"vm",adminOnly:!1}).when("/logout",{templateUrl:"modules/logout/logout.html",controller:"LogoutController",controllerAs:"vm",adminOnly:!1}).when("/register",{templateUrl:"pages/register/register.html",controller:"RegisterController",controllerAs:"vm",adminOnly:!1}).when("/dashboard",{templateUrl:"pages/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"vm",adminOnly:!1}).otherwise({redirectTo:"/dashboard"})}angular.module("app").config(e),e.$inject=["$routeProvider"]}(),function(){"use strict";function e(e,n){function t(){function t(n){"false"===n.data&&e.url("/login")}n.getVar("name").then(t)}return{checkAuthentication:t}}angular.module("app").factory("appService",e),e.$inject=["$location","sessionService"]}(),function(){"use strict";function e(e,n){function t(e){this.base="api/"+e+"/"+e+"Manager.php"}function r(n){return e.get(this.base+"?id="+n).then(l)["catch"](c)}function o(n){return e.post(this.base,n).then(l)["catch"](c)}function a(n,t){return e.put(this.base+"?id="+n,t).then(l)["catch"](c)}function i(n){return e["delete"](this.base+"?id="+n).then(l)["catch"](c)}function l(e){return e.data}function c(e){return n.error(e),!1}var u=t;return u.prototype={get:r,create:o,update:a,remove:i},u}angular.module("app").factory("crudService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(e,n){function t(n){return e.get(i.base+n).then(o)["catch"](a)}function r(n,t){return e.post(i.base+n,t).then(o)["catch"](a)}function o(e){return e}function a(e){return n.error(e),!1}var i=this;return i.base="api/session/sessionVarManager.php?var=",{getVar:t,setVar:r}}angular.module("app").factory("sessionService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(){function e(e,n,t,r){function o(){l()}function a(n){return n===e.otherModel.$viewValue}function i(e,n){r.$validate()}var l=e.$watch("otherModel",i);r.$validators.spCompareTo=a,n.on("$destroy",o)}var n={require:"ngModel",scope:{otherModel:"=spCompareTo"},link:e};return n}angular.module("app").directive("spCompareTo",e)}(),function(){"use strict";function e(e){function n(){function n(e){t.loading=!1,t.error=e}t.loading=!0,e.login(t.user).then(n)}var t=this;t.loading=!1,t.error="",t.login=n}angular.module("app").controller("LoginController",e),e.$inject=["loginService"]}(),function(){"use strict";function e(e,n,t){function r(r){function o(e){return"false"===e.data?"Username or password was incorrect.":void n.url("/dashboard")}function a(e){return t.error(e),"Something went wrong. Please try again."}return e.post("api/managers/loginManager.php",r).then(o)["catch"](a)}return{login:r}}angular.module("app").factory("loginService",e),e.$inject=["$http","$location","$log"]}(),function(){"use strict";function e(e){}angular.module("app").controller("TasksController",e),e.$inject=["tasksService"]}(),function(){"use strict";function e(){function e(e,n,t){}return{link:e,templateUrl:"modules/tasks/tasks.html",controller:"TasksController",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("spTasks",e)}(),function(){"use strict";function e(e,n){return{}}angular.module("app").factory("tasksService",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(){}angular.module("app").controller("DashboardController",e)}(),function(){"use strict";function e(e){function n(){function n(e){t.loading=!1,t.error=e}t.loading=!0,e.register(t.user).then(n)}var t=this;t.loading=!1,t.error="",t.register=n}angular.module("app").controller("RegisterController",e),e.$inject=["registerService"]}(),function(){"use strict";function e(e,n){function t(n){function t(n){return"false"===n?"Username taken.":void e.url("/login")}return r.crud.create(n).then(t)}var r=this;return r.crud=new n("user"),{register:t}}angular.module("app").factory("registerService",e),e.$inject=["$location","crudService"]}(),function(){"use strict";function e(e,n,t){function r(n){e.$evalAsync(function(){a.name=n.name===!1?"Login":n.name,a.url=n.url})}function o(e){n.error(e)}var a=this;a.name="",a.url="",t.getUser().then(r)["catch"](o)}angular.module("app").controller("HeaderController",e),e.$inject=["$scope","$log","headerService"]}(),function(){"use strict";function e(){function e(e,n,t){}return{link:e,templateUrl:"pages/layout/header/header.html",controller:"HeaderController",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("spHeader",e)}(),function(){"use strict";function e(e,n,t){function r(){function e(e){return"false"===e.data?{name:!1,url:"#/login"}:{name:e.data,url:"#/dashboard"}}function r(e){return n.error(e),"Something went wrong. Please try again."}return t.getVar("name").then(e)["catch"](r)}return{getUser:r}}angular.module("app").factory("headerService",e),e.$inject=["$http","$log","sessionService"]}(),function(){"use strict";function e(){var e=this;e.collapsed=!0,e.toggleSidebar=function(){e.collapsed=!e.collapsed}}angular.module("app").controller("SidebarController",e)}(),function(){"use strict";function e(){function e(e,n,t){function r(e){e?n.removeClass("collapsed"):n.addClass("collapsed")}e.$watch(t.sidebarDirective,r)}return{link:e,templateUrl:"pages/layout/sidebar/sidebar.html",controller:"SidebarController",controllerAs:"vm",bindToController:!0}}angular.module("app").directive("spSidebar",e)}();
//# sourceMappingURL=data:application/json;base64,
